---
import BaseLayout from "../../layouts/BaseLayout.astro";

const title = "Petition | Queens Park";
---

<BaseLayout title={title}>

<h1>We will send this PDF</h1>


<div class="container">
    <div class="row">
        <button id="compile" autofocus>Compile this LaTeX code to a PDF</button>
        <br/>
        <textarea rows={10} id="input"></textarea>
        <br/>
        <pre id="output" style="overflow: scroll; max-height: 300px">
        Click "Console output will show here.
        </pre>
    </div>
    <div class="row">
        <div class="col-sm">
            <object id="testobject" data="" type="application/pdf" width="100%" height="100%">
                <div>No online PDF viewer installed</div>
            </object>
        </div>
    </div>
</div>

</BaseLayout>

<script is:inline src="/promise.js"></script>
<script is:inline src="/pdftex.js"></script>

<script is:inline>

    var appendOutput = function(msg) {
    var content = document.getElementById("output").textContent;

    var output = document.getElementById("output");
    output.textContent = content + "\r\n" + msg;

    output.scrollTop = 999999;
    console.log(msg);
    }

    var pdftex = new PDFTeX("/pdftex-worker.js");
    var latex_code = "" + 
    "\\documentclass{article}" + 
    "\\begin{document}" + 
    "\\LaTeX is great!" + 
    "$E = mc^2$" + 
    "\\end{document}"; 

    pdftex.compile(latex_code)
        .then(function(pdf) { window.open(pdf) });

    var pdf_dataurl = undefined;

    var compile = function(source_code) {
        var pdftex = new PDFTeX("/pdftex-worker.js");
        pdftex.set_TOTAL_MEMORY(80*1024*1024).then(function() {

            pdftex.on_stdout = appendOutput;
            pdftex.on_stderr = appendOutput;

            var start_time = new Date().getTime();

            pdftex.compile(source_code).then(function(pdf_dataurl) {
                var end_time = new Date().getTime();
                console.info("Execution time: " + (end_time-start_time)/1000+' sec');

                if(pdf_dataurl === false) {
                    return;
                } else {
                    console.log(pdf_dataurl)
                    // window.open(pdf_dataurl);

                    // const bytes  = new Uint8Array( pdfBytes ); 
                    // const blob   = new Blob( [ bytes ], { type: "application/pdf" } );
                    // const docUrl = URL.createObjectURL( blob );

                    // var testiframe = document.getElementById('testiframe');
                    // testiframe.setAttribute('src', docUrl);

                    var testobject = document.getElementById('testobject');
                    testobject.setAttribute('data', pdf_dataurl);
                }

            });
        });
    }

    document.getElementById("compile").addEventListener("click", function(e) {
        var source_code = document.getElementById("input").value;
        // console.log(source_code);
        compile(source_code);
    });

    var pdftex_preload = new PDFTeX("/pdftex-worker.js");
    pdftex_preload = undefined;

</script>
